///
/// HybridTelephotoSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridTelephotoSpec.hpp"

namespace margelo::nitro::telephoto {

  void HybridTelephotoSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("source", &HybridTelephotoSpec::getSource);
      prototype.registerHybridSetter("source", &HybridTelephotoSpec::setSource);
      prototype.registerHybridGetter("contentDescription", &HybridTelephotoSpec::getContentDescription);
      prototype.registerHybridSetter("contentDescription", &HybridTelephotoSpec::setContentDescription);
      prototype.registerHybridGetter("alignment", &HybridTelephotoSpec::getAlignment);
      prototype.registerHybridSetter("alignment", &HybridTelephotoSpec::setAlignment);
      prototype.registerHybridGetter("contentScale", &HybridTelephotoSpec::getContentScale);
      prototype.registerHybridSetter("contentScale", &HybridTelephotoSpec::setContentScale);
      prototype.registerHybridGetter("minZoomFactor", &HybridTelephotoSpec::getMinZoomFactor);
      prototype.registerHybridSetter("minZoomFactor", &HybridTelephotoSpec::setMinZoomFactor);
      prototype.registerHybridGetter("maxZoomFactor", &HybridTelephotoSpec::getMaxZoomFactor);
      prototype.registerHybridSetter("maxZoomFactor", &HybridTelephotoSpec::setMaxZoomFactor);
      prototype.registerHybridGetter("onPress", &HybridTelephotoSpec::getOnPress);
      prototype.registerHybridSetter("onPress", &HybridTelephotoSpec::setOnPress);
      prototype.registerHybridGetter("onLongPress", &HybridTelephotoSpec::getOnLongPress);
      prototype.registerHybridSetter("onLongPress", &HybridTelephotoSpec::setOnLongPress);
      prototype.registerHybridGetter("onZoomFractionChanged", &HybridTelephotoSpec::getOnZoomFractionChanged);
      prototype.registerHybridSetter("onZoomFractionChanged", &HybridTelephotoSpec::setOnZoomFractionChanged);
      prototype.registerHybridMethod("zoomTo", &HybridTelephotoSpec::zoomTo);
      prototype.registerHybridMethod("zoomBy", &HybridTelephotoSpec::zoomBy);
      prototype.registerHybridMethod("resetZoom", &HybridTelephotoSpec::resetZoom);
    });
  }

} // namespace margelo::nitro::telephoto
